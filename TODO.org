* Questions
  
* Alpha (Demoable/guided)

* Beta (5-10 early adopters)

  * Scheduled invoices (subsciptions auto generate)
    * Scheduled payments (auto payment for subscriptions)
    * Email payment receipts - Mailer done, will call when doing subscription payments
      * Perhaps it should still send the email when adding any kind of payment?!?

  * Make use of timezone?  - Maybe only needed in the scheduled invoices and payments scripts

  * Deleting a draft invoice needs to delete all children (payments and/or credit notes)

  * Remove Metered billing (quantity stuff)

* 2.0 (MVP, ship in January-february time frame, available to all, for money)
  * Change member password
  * Member password recovery

* 2.1

* 2.2

* Backlog

  * Panels for New/Edit Credit note and new/edit payment (Edits are not hooked in, but should be done JIK)

  * Search/filters for members list

  * Possibly move subscription/plan to account - but only if we don't really have plans.

  * fix conditional get caching (cache busting for dev mode, add flash to cache key, version #?)

  * spaces/show (overview - replaces manage)

  * Trial ending on space and owner (rather than current user)
  * Only owner can update billing info (plan, payment method, etc)
  * Must have a way to transfer ownership

  * Update billing page to include details on spaces/locations used for each CC

  * Improve display of errors on fields for devise forms.
  * Add "due in" to issue date column on invoice list?

  * Events/Notifcations (Activity Tab in New navigation)
  * Maybe add Tags to members to allow arbitrary groupings
  * Add 'Social' Signup/Login for Member portal (FB, Twitter, G+)?
  * Add team support

  * Attendance tracking (check in, out)
  * Attendance tracking API (remote systems updating)
  * Attendance tracking self checking kiosk mode (use attendance tracking api?)
  * Attendance analytics

  * Vanity analytics (# members, etc - probably 'built-in' to each screen)

  * Punch cards

  * Braintree payment gateway
  * Paypal payments (offsite)

  * API Server side
    * Api authentication
    * Api implementation (Per space)
      * members
      * billing
      * member auth
  * API Client side (restful, ruby, golang? python?, etc?)

* Icebox
